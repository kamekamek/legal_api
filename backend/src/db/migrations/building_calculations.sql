-- building_calculations テーブルの作成
create table public.building_calculations (
    id bigint generated by default as identity primary key,
    project_id bigint references public.projects(id) on delete cascade,
    site_area numeric not null,           -- 敷地面積 (m²)
    road_width numeric not null,          -- 前面道路幅員 (m)
    coverage_ratio numeric not null,      -- 建ぺい率 (%)
    floor_area_ratio numeric not null,    -- 容積率 (%)
    buildable_area numeric not null,      -- 建築可能面積 (m²)
    total_floor_area numeric not null,    -- 延べ床面積 (m²)
    road_width_limit numeric not null,    -- 道路幅員による制限 (%)
    effective_ratio numeric not null,     -- 実効容積率 (%)
    memo text,                            -- メモ（任意）
    created_at timestamp with time zone default timezone('utc'::text, now()) not null,
    updated_at timestamp with time zone default timezone('utc'::text, now()) not null,
    created_by uuid references auth.users(id) on delete set null,  -- 作成者
    updated_by uuid references auth.users(id) on delete set null   -- 更新者
);

-- インデックスの作成
create index idx_building_calculations_project_id on public.building_calculations(project_id);
create index idx_building_calculations_created_at on public.building_calculations(created_at);

-- RLSの設定
alter table public.building_calculations enable row level security;

-- RLSポリシーの作成
create policy "Users can view building calculations they have access to"
    on public.building_calculations for select
    using (
        auth.uid() in (
            select user_id
            from public.project_members
            where project_id = building_calculations.project_id
        )
    );

create policy "Users can insert building calculations for their projects"
    on public.building_calculations for insert
    with check (
        auth.uid() in (
            select user_id
            from public.project_members
            where project_id = building_calculations.project_id
        )
    );

create policy "Users can update building calculations for their projects"
    on public.building_calculations for update
    using (
        auth.uid() in (
            select user_id
            from public.project_members
            where project_id = building_calculations.project_id
        )
    )
    with check (
        auth.uid() in (
            select user_id
            from public.project_members
            where project_id = building_calculations.project_id
        )
    );

create policy "Users can delete building calculations for their projects"
    on public.building_calculations for delete
    using (
        auth.uid() in (
            select user_id
            from public.project_members
            where project_id = building_calculations.project_id
        )
    );

-- トリガー関数の作成（updated_atの自動更新用）
create or replace function public.handle_updated_at()
returns trigger
language plpgsql
security definer
as $$
begin
    new.updated_at = timezone('utc'::text, now());
    return new;
end;
$$;

-- トリガーの作成
create trigger handle_building_calculations_updated_at
    before update on public.building_calculations
    for each row
    execute function public.handle_updated_at();

-- コメントの追加
comment on table public.building_calculations is '建築計算結果を保存するテーブル';
comment on column public.building_calculations.site_area is '敷地面積（平方メートル）';
comment on column public.building_calculations.road_width is '前面道路幅員（メートル）';
comment on column public.building_calculations.coverage_ratio is '建ぺい率（パーセント）';
comment on column public.building_calculations.floor_area_ratio is '容積率（パーセント）';
comment on column public.building_calculations.buildable_area is '建築可能面積（平方メートル）';
comment on column public.building_calculations.total_floor_area is '延べ床面積（平方メートル）';
comment on column public.building_calculations.road_width_limit is '道路幅員による制限（パーセント）';
comment on column public.building_calculations.effective_ratio is '実効容積率（パーセント）';
comment on column public.building_calculations.memo is '計算に関する補足メモ'; 