-- プロジェクトのデータベーススキーマ定義

-- プロジェクトテーブル
create table public.projects (
    id bigint generated by default as identity primary key,
    name text not null,                    -- プロジェクト名
    location text,                         -- 所在地
    description text,                      -- 説明
    status text not null default 'planning',  -- ステータス（planning, in_progress, completed）
    start_date date,                       -- 開始日
    end_date date,                         -- 終了日
    created_at timestamp with time zone default timezone('utc'::text, now()) not null,
    updated_at timestamp with time zone default timezone('utc'::text, now()) not null,
    created_by uuid references auth.users(id) on delete set null,
    updated_by uuid references auth.users(id) on delete set null
);

-- プロジェクトメンバーテーブル
create table public.project_members (
    id bigint generated by default as identity primary key,
    project_id bigint references public.projects(id) on delete cascade,
    user_id uuid references auth.users(id) on delete cascade,
    role text not null default 'member',   -- ロール（owner, admin, member）
    created_at timestamp with time zone default timezone('utc'::text, now()) not null,
    updated_at timestamp with time zone default timezone('utc'::text, now()) not null,
    unique(project_id, user_id)
);

-- 法令情報テーブル
create table public.legal_info (
    id bigint generated by default as identity primary key,
    project_id bigint references public.projects(id) on delete cascade,
    type text,                            -- 用途地域タイプ
    fire_area text,                       -- 防火地域
    building_coverage_ratio numeric,       -- 建ぺい率
    building_coverage_ratio2 numeric,      -- 建ぺい率（制限値）
    floor_area_ratio numeric,             -- 容積率
    height_district text,                 -- 高度地区
    height_district2 text,                -- 高度地区（制限値）
    zone_map text,                        -- 区域区分
    scenic_zone_name text,                -- 風致地区名
    scenic_zone_type text,                -- 風致地区種別
    article_48 jsonb,                     -- 建築基準法48条（用途制限）
    appendix_2 jsonb,                     -- 法別表第２（用途地域内の建築物の制限）
    safety_ordinance jsonb,               -- 東京都建築安全条例
    created_at timestamp with time zone default timezone('utc'::text, now()) not null,
    updated_at timestamp with time zone default timezone('utc'::text, now()) not null,
    created_by uuid references auth.users(id) on delete set null,
    updated_by uuid references auth.users(id) on delete set null
);

-- 告示文テーブル
create table public.kokuji (
    id bigint generated by default as identity primary key,
    kokuji_id text not null unique,       -- 告示番号
    title text not null,                  -- タイトル
    content text not null,                -- 本文
    effective_date date,                  -- 施行日
    category text,                        -- 区分
    created_at timestamp with time zone default timezone('utc'::text, now()) not null,
    updated_at timestamp with time zone default timezone('utc'::text, now()) not null
);

-- プロジェクトと告示文の関連テーブル
create table public.project_kokuji (
    id bigint generated by default as identity primary key,
    project_id bigint references public.projects(id) on delete cascade,
    kokuji_id text references public.kokuji(kokuji_id) on delete cascade,
    memo text,                            -- メモ
    created_at timestamp with time zone default timezone('utc'::text, now()) not null,
    updated_at timestamp with time zone default timezone('utc'::text, now()) not null,
    created_by uuid references auth.users(id) on delete set null,
    unique(project_id, kokuji_id)
);

-- 建築計算テーブル
create table public.building_calculations (
    id bigint generated by default as identity primary key,
    project_id bigint references public.projects(id) on delete cascade,
    site_area numeric not null,           -- 敷地面積 (m²)
    road_width numeric not null,          -- 前面道路幅員 (m)
    coverage_ratio numeric not null,      -- 建ぺい率 (%)
    floor_area_ratio numeric not null,    -- 容積率 (%)
    buildable_area numeric not null,      -- 建築可能面積 (m²)
    total_floor_area numeric not null,    -- 延べ床面積 (m²)
    road_width_limit numeric not null,    -- 道路幅員による制限 (%)
    effective_ratio numeric not null,     -- 実効容積率 (%)
    memo text,                            -- メモ
    created_at timestamp with time zone default timezone('utc'::text, now()) not null,
    updated_at timestamp with time zone default timezone('utc'::text, now()) not null,
    created_by uuid references auth.users(id) on delete set null,
    updated_by uuid references auth.users(id) on delete set null
);

-- インデックスの作成
create index idx_projects_created_at on public.projects(created_at);
create index idx_project_members_project_id on public.project_members(project_id);
create index idx_project_members_user_id on public.project_members(user_id);
create index idx_legal_info_project_id on public.legal_info(project_id);
create index idx_project_kokuji_project_id on public.project_kokuji(project_id);
create index idx_project_kokuji_kokuji_id on public.project_kokuji(kokuji_id);
create index idx_building_calculations_project_id on public.building_calculations(project_id);
create index idx_building_calculations_created_at on public.building_calculations(created_at);

-- RLSの設定
alter table public.projects enable row level security;
alter table public.project_members enable row level security;
alter table public.legal_info enable row level security;
alter table public.kokuji enable row level security;
alter table public.project_kokuji enable row level security;
alter table public.building_calculations enable row level security;

-- プロジェクトのRLSポリシー
create policy "Users can view projects they are members of"
    on public.projects for select
    using (
        auth.uid() in (
            select user_id
            from public.project_members
            where project_id = id
        )
    );

create policy "Users can create projects"
    on public.projects for insert
    with check (true);

create policy "Project members can update projects"
    on public.projects for update
    using (
        auth.uid() in (
            select user_id
            from public.project_members
            where project_id = id
            and role in ('owner', 'admin')
        )
    );

create policy "Project owners can delete projects"
    on public.projects for delete
    using (
        auth.uid() in (
            select user_id
            from public.project_members
            where project_id = id
            and role = 'owner'
        )
    );

-- プロジェクトメンバーのRLSポリシー
create policy "Users can view project members"
    on public.project_members for select
    using (
        auth.uid() in (
            select user_id
            from public.project_members
            where project_id = project_id
        )
    );

create policy "Project admins can manage members"
    on public.project_members for all
    using (
        auth.uid() in (
            select user_id
            from public.project_members
            where project_id = project_id
            and role in ('owner', 'admin')
        )
    );

-- 法令情報のRLSポリシー
create policy "Users can view legal info they have access to"
    on public.legal_info for select
    using (
        auth.uid() in (
            select user_id
            from public.project_members
            where project_id = legal_info.project_id
        )
    );

create policy "Project members can manage legal info"
    on public.legal_info for all
    using (
        auth.uid() in (
            select user_id
            from public.project_members
            where project_id = legal_info.project_id
        )
    );

-- 告示文のRLSポリシー
create policy "Everyone can view kokuji"
    on public.kokuji for select
    using (true);

-- プロジェクト告示文のRLSポリシー
create policy "Users can view project kokuji they have access to"
    on public.project_kokuji for select
    using (
        auth.uid() in (
            select user_id
            from public.project_members
            where project_id = project_kokuji.project_id
        )
    );

create policy "Project members can manage project kokuji"
    on public.project_kokuji for all
    using (
        auth.uid() in (
            select user_id
            from public.project_members
            where project_id = project_kokuji.project_id
        )
    );

-- 建築計算のRLSポリシー
create policy "Users can view building calculations they have access to"
    on public.building_calculations for select
    using (
        auth.uid() in (
            select user_id
            from public.project_members
            where project_id = building_calculations.project_id
        )
    );

create policy "Project members can manage building calculations"
    on public.building_calculations for all
    using (
        auth.uid() in (
            select user_id
            from public.project_members
            where project_id = building_calculations.project_id
        )
    );

-- updated_at自動更新用のトリガー関数
create or replace function public.handle_updated_at()
returns trigger
language plpgsql
security definer
as $$
begin
    new.updated_at = timezone('utc'::text, now());
    return new;
end;
$$;

-- 各テーブルにupdated_atトリガーを設定
create trigger handle_projects_updated_at
    before update on public.projects
    for each row execute function public.handle_updated_at();

create trigger handle_project_members_updated_at
    before update on public.project_members
    for each row execute function public.handle_updated_at();

create trigger handle_legal_info_updated_at
    before update on public.legal_info
    for each row execute function public.handle_updated_at();

create trigger handle_kokuji_updated_at
    before update on public.kokuji
    for each row execute function public.handle_updated_at();

create trigger handle_project_kokuji_updated_at
    before update on public.project_kokuji
    for each row execute function public.handle_updated_at();

create trigger handle_building_calculations_updated_at
    before update on public.building_calculations
    for each row execute function public.handle_updated_at();

-- テーブルとカラムのコメント
comment on table public.projects is 'プロジェクト情報を管理するテーブル';
comment on table public.project_members is 'プロジェクトメンバーを管理するテーブル';
comment on table public.legal_info is 'プロジェクトの法令情報を管理するテーブル';
comment on column public.legal_info.type is '用途地域タイプ';
comment on column public.legal_info.fire_area is '防火地域';
comment on column public.legal_info.building_coverage_ratio is '建ぺい率';
comment on column public.legal_info.building_coverage_ratio2 is '建ぺい率（制限値）';
comment on column public.legal_info.floor_area_ratio is '容積率';
comment on column public.legal_info.height_district is '高度地区';
comment on column public.legal_info.height_district2 is '高度地区（制限値）';
comment on column public.legal_info.zone_map is '区域区分（市街化区域、市街化調整区域など）';
comment on column public.legal_info.scenic_zone_name is '風致地区名';
comment on column public.legal_info.scenic_zone_type is '風致地区種別';
comment on column public.legal_info.article_48 is '建築基準法48条に基づく用途制限';
comment on column public.legal_info.appendix_2 is '建築基準法別表第２に基づく用途地域内の建築物の制限';
comment on column public.legal_info.safety_ordinance is '東京都建築安全条例に基づく制限';
comment on table public.kokuji is '告示文を管理するテーブル';
comment on table public.project_kokuji is 'プロジェクトと告示文の関連を管理するテーブル';
comment on table public.building_calculations is '建築計算結果を管理するテーブル'; 